# https://peps.python.org/pep-0621/
# pip wheel . --no-build-isolation -vvv

#-------------------------------------------------------------------------------------------
[project]
name = "dynomite"
version = "0.0.1"
description = "structural dynamics tools"
#long_description = "structural dynamics tools"   # renamed to readme

authors = [
    {name = "Steve Doyle", email="asdf@gmail.com"},
    #{email = "info@example.com"}
]
#license = {file = "LICENSE.txt"}
#readme = {file = "README.md"}  # doesn't work
#readme = "various tools"   # it's looking for a file
#readme = "README.md"           # doesn't work

requires-python = ">=3.9"

#keywords = ["packaging", "dependency", "infer", "pyproject.toml"]
#keywords = ["nastran"]

classifiers = [
    "Topic :: Software Development",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: BSD-3",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
]

# Requirements: This is done differently by poetry!
dependencies = [
    'numpy',
    'scipy',
    'matplotlib',
]
#-------------------------------------------------------------------------------------------
[project.optional-dependencies]
#dev = [
#    #"black>=23",
#]

# fancy
#pandas = [
#    'pandas>=1.0,<2.0',
#]

gui_pyqt5 = [
    'PyQt5',    # gui library
]
gui_pyside2 = [
    'PySide2',  # gui library
]
gui_pyside6 = [
    'PySide6',  # gui library
]
gui = gui_pyside6

dev = [
    "dynomite[all]",
    "tox",
    "pre-commit",
    "bump2version",
    "setuptools>=66.0",
    "wheel",
]
none = []
#-------------------------------------------------------------------------------------------
[project.scripts]
#poetry = "infer_pyproject.cli:main"
dynomite = "dynmomite.gui.gui:cmd_line"

#-------------------------------------------------------------------------------------------
[project.urls]

homepage        = "https://github.com/SteveDoyle2/dynomite/"
issue_tracker   = "https://github.com/SteveDoyle2/dynomite/issues"
documentation   = "https://github.com/SteveDoyle2/dynomite/"
repository      = "https://github.com/SteveDoyle2/dynomite.git"

#-------------------------------------------------------------------------------------------
[build-system]
requires = [

# main
    "setuptools >= 66.0.0",
    "setuptools_scm[toml]>=6.2",
    "wheel<0.40",
]
build-backend = "setuptools.build_meta"
#requires = ["setuptools>=61.0.0", "setuptools_scm[toml]>=6.2"]

#-------------------------------------------------------------------------------------------
# makes "pip wheel ." work
# lets us create a wheel for distribution
#
[tool.distutils.bdist_wheel]
universal = true

#-------------------------------------------------------------------------------------------
# https://github.com/sphinx-toolbox/sphinx-pyproject/blob/master/pyproject.toml
[tool.setuptools]
include-package-data = false
#packages = ["dynomite"]

[tool.setuptools.packages.find]
# https://stackoverflow.com/questions/75387904/how-to-exclude-tests-folder-from-the-wheel-of-a-pyproject-toml-managed-lib
# don't include pdfs/dat files in the wheel
#find = {}
#where
include = ["pyNastran*"]
#include = ["pkg*"]

exclude = [
    'models/*',
    'dynomite/converters/dev*',
    'dynomite/converters/dev*',
]

#-------------------------------------------------------------------------------------------

#[tool.setuptools_scm]
